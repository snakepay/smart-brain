{"ast":null,"code":"import _classCallCheck from \"/var/www/html/Web Developer/smart-brain/facialrecognitionbrain/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/Web Developer/smart-brain/facialrecognitionbrain/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/Web Developer/smart-brain/facialrecognitionbrain/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/Web Developer/smart-brain/facialrecognitionbrain/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/Web Developer/smart-brain/facialrecognitionbrain/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/Web Developer/smart-brain/facialrecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIg from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport './App.css';\nvar app = new Clarifai.App({\n  apiKey: '0834b90914804703a266eb9233e32201'\n});\nvar particlesOptions = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 100\n    },\n    \"size\": {\n      \"value\": 3\n    }\n  }\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.loadUser = function (data) {\n      _this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    _this.calculateFaceLocation = function (data) {\n      var clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      var image = document.getElementById('inputimage');\n      var width = image.clientWidth;\n      var heigth = image.clientHeight;\n      /*console.log(clarifaiFace);\n      console.log(image);\n      console.log('largura',width,'altura',heigth);*/\n\n      return {\n        //aqui faz o calculo das \"bordas\" para pegar os rostos na foto!\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * heigth,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: heigth - clarifaiFace.bottom_row * heigth\n      };\n    };\n\n    _this.displayFaceBox = function (box) {\n      console.log(box);\n\n      _this.setState({\n        box: box\n      });\n\n      console.log('foto passada para state', _this.state.box);\n    };\n\n    _this.onInputChange = function (event) {\n      _this.setState({\n        input: event.target.value\n      });\n    };\n\n    _this.onButtonSubmit = function () {\n      _this.setState({\n        imageUrl: _this.state.input\n      });\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, _this.state.input) //recupera as regioes detectadas das faces nas fotos\n      .then(function (response) {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'apllication/json'\n            },\n            body: JSON.stringify({\n              id: _this.state.user.id\n            })\n          }).then(function (response) {\n            return response.json();\n          }).then(function (count) {\n            _this.setState({\n              user: {\n                entries: count\n              }\n            });\n          });\n        }\n\n        ;\n\n        _this.displayFaceBox(_this.calculateFaceLocation(response));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.onRouteChange = function (route) {\n      if (route === 'signout') {\n        _this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        _this.setState({\n          isSignedIn: true\n        });\n      }\n\n      _this.setState({\n        route: route\n      });\n    };\n\n    _this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box; //destructing\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Particles, {\n        params: particlesOptions,\n        className: \"particles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), route === 'home' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        name: this.state.user.name,\n        entries: this.state.user.entries,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(FaceRecognition, {\n        box: box,\n        imageUrl: imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })) : route === 'signin' ? React.createElement(SignIg, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }) : React.createElement(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/Web Developer/smart-brain/facialrecognitionbrain/src/App.js"],"names":["React","Component","Clarifai","Particles","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","SignIg","Register","app","App","apiKey","particlesOptions","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","clientWidth","heigth","clientHeight","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","state","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","catch","err","onRouteChange","route","isSignedIn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIg from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport './App.css';\n\n\nconst app = new Clarifai.App({\n  apiKey: '0834b90914804703a266eb9233e32201'\n });\n\nconst particlesOptions = {\n  \"particles\": {\n    \"number\": { \n        \"value\": 100\n    },\n    \"size\": {\n        \"value\": 3\n    }\n  } \n};\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',        \n        entries: 0,\n        joined: ''\n      }\n    };\n  };\n\n  /*componentDidMount() { //aqui foi para testar se o localhost estava respondendo\n    fetch('http://localhost:3000')\n      .then(response => response.json())\n      .then(data => console.log(data));\n  }*/\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }});\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;    \n    const image = document.getElementById('inputimage');\n    const width = (image.clientWidth);\n    const heigth = (image.clientHeight);\n    /*console.log(clarifaiFace);\n    console.log(image);\n    console.log('largura',width,'altura',heigth);*/\n    return {\n      //aqui faz o calculo das \"bordas\" para pegar os rostos na foto!\n      leftCol   : clarifaiFace.left_col * width,\n      topRow    : clarifaiFace.top_row * heigth,\n      rightCol  : width - (clarifaiFace.right_col * width),\n      bottomRow : heigth - (clarifaiFace.bottom_row * heigth)\n    };\n  };\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box:box});\n    console.log('foto passada para state',this.state.box);\n  }\n\n  //pega o valor do textfield e guarda no this.state.input\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    //recupera as regioes detectadas das faces nas fotos\n    .then( response => {\n      if(response) {\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {'Content-Type': 'apllication/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n          .then(response => response.json())\n          .then(count => {\n            this.setState({user: {\n              entries: count\n            }})\n          });\n      };\n      this.displayFaceBox( this.calculateFaceLocation(response) ) })\n    .catch( err => console.log(err) )     \n  };\n\n  onRouteChange = (route) => {    \n    if( route === 'signout' ) {      \n      this.setState({isSignedIn: false});\n    } else if( route === 'home') {      \n      this.setState({isSignedIn: true});\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box} = this.state; //destructing\n    return (\n      <div className=\"App\">\n        <Particles params={particlesOptions} className='particles'/>        \n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home' \n          ? <div>  \n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries} />\n              <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onButtonSubmit={this.onButtonSubmit}          \n              />  \n              <FaceRecognition box={box} imageUrl={imageUrl}/>\n            </div>\n          : ( \n              route === 'signin'\n              ? <SignIg loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>             \n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }  \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}